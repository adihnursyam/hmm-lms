// The polymorphic resource system
model Resource {
  id          String       @id @default(cuid())
  title       String
  description String?
  type        ResourceType // The format: FILE or LINK

  attachableId   String
  attachableType AttachableType // e.g., COURSE, ANNOUNCEMENT, EVENT

  category ResourceCategory?

  attachment Attachment?
  link       Link?
  isActive   Boolean     @default(true) // <-- ADDED THIS LINE

  uploadedById String
  uploadedBy   User     @relation("UploadedResources", fields: [uploadedById], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  accessLogs ResourceAccess[]

  @@index([attachableId, attachableType])
  @@map("resources")
}

model Attachment {
  id         String   @id @default(cuid())
  filename   String
  key        String
  mimeType   String
  size       Int
  resourceId String   @unique
  resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)

  @@map("attachments")
}

model Link {
  id         String     @id @default(cuid())
  url        String
  source     LinkSource
  resourceId String     @unique
  resource   Resource   @relation(fields: [resourceId], references: [id], onDelete: Cascade)

  @@map("links")
}

model ResourceAccess {
  id         String     @id @default(cuid())
  action     AccessType
  ipAddress  String?
  userAgent  String?
  accessedAt DateTime   @default(now())

  resourceId String
  resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation("ResourceAccesses", fields: [userId], references: [id], onDelete: Cascade)

  @@map("resource_access")
}

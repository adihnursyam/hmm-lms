// User and authentication models
model User {
  id       String @id @default(cuid())
  email    String @unique
  name     String
  password String

  nim       String  @unique
  faculty   String?
  program   String?
  position  String?
  role      Role    @default(STUDENT)

  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  sessions         Session[]
  courses          Course[]
  learningSessions LearningSession[]
  userAttempts     UserAttempt[]

  createdEvents        Event[]          @relation("CreatedBy")
  events               Event[]          @relation("UserEvents")
  createdAnnouncements Announcement[]   @relation("CreatedAnnouncements")
  createdScholarships  Scholarship[]    @relation("CreatedScholarships")
  createdJobVacancies  JobVacancy[]     @relation("CreatedJobVacancies")
  pushSubscriptions    PushSubscription[]
  courseTestimonial    CourseTestimonial[]

  // Updated relations for the new resource system
  uploadedResources Resource[]       @relation("UploadedResources")
  resourceAccesses  ResourceAccess[] @relation("ResourceAccesses")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PushSubscription {
  id        String   @id @default(cuid())
  endpoint  String   @unique
  p256dh    String
  auth      String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
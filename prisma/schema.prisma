// prisma/schema.prisma
datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum Role {
    ADMIN
    STUDENT
}

model User {
    id           String  @id @default(cuid())
    email        String  @unique
    name         String?
    password     String

    nim          String? @unique
    faculty      String?
    program      String?
    role         Role    @default(STUDENT)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // NextAuth.js specific fields if you also use a database adapter for sessions/accounts
    // For CredentialsProvider alone, these aren't strictly needed for auth,
    // but good to have if you expand authentication methods.
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

// These models are required by NextAuth.js if you use a database adapter
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
